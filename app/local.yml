version: '3.11'

services:

  web: &web
    build:
      context: .
      dockerfile: compose/local/django/Dockerfile
    volumes:
      - ./:/usr/src/app
    ports:
      - "50800:8000"
      - "4666:4444"
    env_file:
      - ./.envs/.local/.django
      - ./.envs/.local/.postgres
    depends_on:
      - db
      - redis
      - elasticsearch
    stdin_open: true
    tty: true

  db:
    image: postgres:13.0-alpine
    ports:
      - "30333:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .envs/.local/.postgres

  worker:
    <<: *web
    command: celery --app=config worker --loglevel=info
    links:
      - redis
    ports: []
    depends_on:
      - web
      - redis
      - db

  beat:
    <<: *web
    command: celery --app=config beat --loglevel=info
    ports: []
    depends_on:
      - web
      - redis
      - db

  redis:
    image: redis:7.0.5-alpine
    hostname: redis

  flower:
    <<: *web
    command: celery --app=config flower --port=5555 --broker=redis://redis:6379/0
    ports:
      - "5555:5555"
    depends_on:
      - web
      - redis
      - worker

  elasticsearch:
    image: elasticsearch:8.7.0
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms1g -Xmx1g
      - xpack.security.enabled=false
    volumes:
      - es_data:/usr/share/elasticsearch/data
    ports:
      - target: 9200
        published: 9200

  kibana:
    image: kibana:8.7.0
    ports:
      - target: 5601
        published: 5601
    depends_on:
      - elasticsearch


volumes:
  postgres_data: {}
  es_data:
    driver: local
